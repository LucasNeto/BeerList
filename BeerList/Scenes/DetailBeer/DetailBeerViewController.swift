//
//  DetailBeerViewController.swift
//  BeerList
//
//  Created by Lucas  N Santana on 25/07/19.
//  Copyright (c) 2019 Lucas  N Santana. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailBeerDisplayLogic: class {
    func displayBeer(viewModel: DetailBeer.Show.ViewModel)
}

class DetailBeerViewController: UIViewController, DetailBeerDisplayLogic {
    var interactor: DetailBeerBusinessLogic?
    var router: (NSObjectProtocol & DetailBeerRoutingLogic & DetailBeerDataPassing)?
    
    @IBOutlet weak var beerImage: UIImageView!
    @IBOutlet weak var nameLbl: UILabel!
    @IBOutlet weak var taglineLbl: UILabel!
    @IBOutlet weak var abvLbl: UILabel!
    @IBOutlet weak var ibuLbl: UILabel!
    @IBOutlet weak var descriptionLbl: UILabel!
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = DetailBeerInteractor()
        let presenter = DetailBeerPresenter()
        let router = DetailBeerRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        doShowDetailBeer()
    }
    
    // MARK: DetailBeerDisplayLogic
    
    func doShowDetailBeer() {
        interactor?.showBeer()
    }
    
    func displayBeer(viewModel: DetailBeer.Show.ViewModel){
        beerImage?.image = #imageLiteral(resourceName: "beer_mask")
        nameLbl?.text = viewModel.beerDetailed.name
        taglineLbl?.text = viewModel.beerDetailed.tagline
        abvLbl?.text = viewModel.beerDetailed.abv
        ibuLbl?.text = viewModel.beerDetailed.ibu
        descriptionLbl?.text = viewModel.beerDetailed.description
        
        viewModel.beerDetailed.imageUrl?.loadImageWithUrlString(completion: { (image) in
            self.beerImage?.image = image
        })
    }
}
