//
//  ListBeerInteractor.swift
//  BeerList
//
//  Created by Lucas  N Santana on 24/07/19.
//  Copyright (c) 2019 Lucas  N Santana. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListBeerBusinessLogic {
    func requestBeers()
    func beerSelectTap(request: ListBeer.Select.Request)
}

protocol ListBeerDataStore {
    var beerSelected: Beer? { get }
    var listBeer: [Beer] { get }
}

class ListBeerInteractor: ListBeerBusinessLogic, ListBeerDataStore {
    var presenter: ListBeerPresentationLogic?
    var worker: ListBeerWorker?
    var beerSelected: Beer?
    var listBeer: [Beer] = []
    
    //MARK: ListBeerBusinessLogic
    
    func requestBeers() {
        worker = ListBeerWorker()
        worker?.requestBeers(completion: { (response) in
            guard let response = response else {
                self.presenter?.presentListBeers(response: ListBeer.FetchBeer.Response(listBeer: []))
                return
            }
            self.listBeer = response.listBeer
            self.presenter?.presentListBeers(response: response)
            
        })
    }
    
    func beerSelectTap(request: ListBeer.Select.Request) {
        let idx = request.idx
        if idx < listBeer.count {
            self.beerSelected = listBeer[idx]
            presenter?.presentDetailBeer()
        }
    }
}
